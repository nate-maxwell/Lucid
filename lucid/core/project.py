"""
# Lucid Project Management

* Description:

    Herein are utilities for creating and handling projects.
"""


from pathlib import Path

from lucid.core import const
from lucid.core import io_utils
from lucid.core import plugins
from lucid.core.config import Config


# --------Path Declarations----------------------------------------------------

PROJECT_ROOT = Path(const.PROJECTS_DIR, Config.project)
"""The root dir of the currently loaded project."""

ASSET_DIR = Path(PROJECT_ROOT, 'asset')
"""The root dir of the assets folder on the currently loaded project."""

CONFIG_DIR = Path(PROJECT_ROOT, 'config')
"""The root config directory of the currently loaded project."""

PROJECT_USER_DIR = Path(PROJECT_ROOT, 'user')
"""A mini-home for artists bound to the project's directory structure."""

ENGINE_DIR = Path(PROJECT_ROOT, 'engine')
"""The engine related files for the currently loaded project.
These are not files located in the source control tracked engine project, but
rather files related to the engine project.
"""

ENGINE_OUTGOING_DIR = Path(ENGINE_DIR, 'outgoing')
"""Files generated by the engine that are not to remain in engine, e.g.
cutscene renders, sim exports, etc.
"""

ENGINE_RENDERS_DIR = Path(ENGINE_OUTGOING_DIR, 'renders')
"""Directory for renders that came out of the engine."""

ENGINE_SIM_DIR = Path(ENGINE_OUTGOING_DIR, 'sim')
"""Directory for exported sims that came out of the engine."""


# --------Path Installers------------------------------------------------------

def install_base_dirs() -> None:
    """Ensures base project directories are created.
    Some are remade in other funcs but the redundancy here is so that the base
    project dirs are all made together, in the event that a section hasn't been
    spun up yet by installation features of a specific system.
    """
    for i in [
        ASSET_DIR,
        CONFIG_DIR,
        PROJECT_USER_DIR,
        ENGINE_DIR
    ]:
        io_utils.create_folder(i)


def install_all_engine_dirs() -> None:
    """!! These are not to be confused with the engine project's directory
    structure!

    This creates all engine related directories in the project's directory
    structure.
    """
    for i in [
        ENGINE_DIR,
        ENGINE_OUTGOING_DIR,
        ENGINE_SIM_DIR,
        ENGINE_RENDERS_DIR
    ]:
        io_utils.create_folder(i)


def install_project_plugin_dirs() -> None:
    """Ensures plugin dirs exist at project level for each supported DCC."""
    for i in const.Dcc:
        dcc_path = plugins.get_plugins_dir(i.value)
        io_utils.create_folder(dcc_path)


def install_domain_dirs() -> None:
    """Installs const.Domain member dirs, model, texture, etc."""
    for i in const.Domain:
        dir_name = i.value.lower()
        path = Path(PROJECT_ROOT, 'asset', dir_name)
        io_utils.create_folder(path)


def install_project_configs() -> None:
    """Ensures all project level configs exist within the project."""
    for config_ in Config.project_configs:
        config_file = config_.get_config_filepath()
        if not config_file.exists():
            config_file.parent.mkdir(parents=True, exist_ok=True)
            config_.export_data(Config.project)


def install_project_sub_dirs() -> None:
    """Ensures all necessary project paths for the currently loaded show
    have been created.
    """
    install_base_dirs()
    install_all_engine_dirs()
    install_project_plugin_dirs()
    install_domain_dirs()
    install_project_configs()
